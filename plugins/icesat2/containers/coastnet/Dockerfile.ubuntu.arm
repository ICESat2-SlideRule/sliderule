###########
# BUILDENV
###########
FROM ubuntu:20.04 as buildenv


# install build dependencies
RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive \
  apt-get install -y --no-install-recommends \
  build-essential \
  cmake \
  git \
  cppcheck \
  libopencv-dev \
  python3.9 \
  python3.9-venv \
  parallel \
  libgmp-dev \
  libmlpack-dev \
  mlpack-bin \
  libarmadillo-dev \
  libgdal-dev
  && rm -rf /var/lib/apt/lists/*

WORKDIR /

# create python environment
RUN python3.9 -m venv venv \
    && . ./venv/bin/activate \
    && python -m pip install --upgrade pip \
    && pip install torch numpy

COPY ut-coastnet /

RUN . /venv/bin/activate \
    && cd /ut-coastnet \
    && make build


## install build dependencies
#RUN  dnf update -y \
#  && dnf groupinstall -y "Development Tools" \
#  && dnf install -y \
#         make \
#         automake \
#         gcc \
#         gcc-c++ \
#         cmake \
#         cppcheck \
#         opencv-devel \
#         python3.9  \
#         parallel \
#         gmp-devel \
#         mlpack-devel \
#         mlpack-bin \
#         gdal-devel \
#         armadillo-devel \
#         'dnf-command(config-manager)' \
#  && dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/fedora39/x86_64/cuda-fedora39.repo \
#  && dnf -y install cuda libcudnn8 libcudnn8-devel \
#  && dnf clean all \
#  && rm -rf /var/cache/yum
#
# set working directory to root
#WORKDIR /
#
## create python environment
##RUN python3.9 -m venv venv \
##    && source ./venv/bin/activate \
##    && python -m pip install --upgrade pip \
##    && pip install torch numpy
#
##COPY ut-coastnet /
#
##RUN source /venv/bin/activate \
##    && cd /ut-coastnet \
##    && make build


# set entrypoint to bash shell (expect it to be overridden)
ENTRYPOINT ["/bin/sh"]